<script src="/javascripts/lib/easeljs.min.js" type="text/javascript"></script>
<script src="/javascripts/lib/tweenjs.min.js" type="text/javascript"></script>
<script src='/javascripts/preload.js'></script>
<script src='/javascripts/scripts.js'></script>
<script src='/javascripts/mapUtils.js'></script>

<script src='/javascripts/bullet.js'></script>
<script src='/javascripts/crosshair.js'></script>
<script src='/javascripts/progressbar.js'></script>
<script src='/javascripts/messages.js'></script>
<script src='/javascripts/player.js'></script>
<script src='/javascripts/light/light.js'></script>
<script src='/javascripts/light/lightingEngine.js'></script>

<script src='/assets/map.js'></script>

<script src="/socket.io/socket.io.js" type="text/javascript"></script>
<script>

    var socket = io.connect('http://' + window.location.host + window.location.pathname, {reconnect: false});
    var name = false;

    function connect(name) {
        socket.emit('join', name)
        $('#me').text(name)
    }

    preload(assets, function(files) {

        crosshair = new Crosshair();

        socket.on('connect', function () {
            //getName();
            // connect()
        });

        socket.on('instance', function(data) {
            join(data)
            new Message('GO GO GO!')
            updateLeaderboard();
        });

        socket.on('addPlayer', function(data) {
            if(data.id!= socket.socket.sessionid) players[data.id] = new Player(data)
            updateLeaderboard();
        });

        socket.on('removePlayer', function(data) {
            if(!players[data.id]) return false
            players[data.id].remove()
            delete players[data.id]
            updateLeaderboard();
        })

        socket.on('moved', function(data) {
            if(!players[data.id]) return false;
            if(data.id!=me.id) players[data.id].updatePosition(data.x, data.y, data.rotation)
        });

        socket.on('fired', function(data) {
            if(me.id != data.owner) {
                new Bullet({x:data.startX, y:data.startY, endX:data.endX, endY:data.endY, owner:data.owner})
            } else {
                me.updateClip(data.ownerClip)
            }
        });

        socket.on('damage', function(data) {
            if(data.id == me.id) me.updateHealth(data.health)
            if(data.hitBy == me.id) players[data.id].floatText('-' + data.lastHit)
            updateLeaderboardHP(data);
        });

        socket.on('died', function(data) {
            players[data.id].deaths = data.deaths;
            players[data.id].updatePosition(data.x, data.y, data.rotation)
            me.updateCounts();
        });

        socket.on('kill', function(data) {
            players[data.id].killCount = data.killCount;
            if(data.id == me.id) new Message('You killed ' + players[data.killee].name)
            updateLeaderboard();
            me.updateCounts();
        })

        socket.on('score', function(data) {
            $("#total_score h2 span").html(data.score)
        });

        socket.on('respawn', function(data) {
            me.respawn(data);
        });

        socket.on('said', function(data) {
            if($('#chat li').length>7) $('#chat li:first').remove()
            $('#chat ul').append('<li><strong>' + data.name + '</strong>: ' + data.text + '</li>')
        });

        socket.on('reload', function(data) {
            me.reload();
        });

        socket.on('reloaded', function(data) {
            me.reloaded(data.clip);
        });

        socket.on('gameover', function() {
            setTimeout(function() { new Message('Game over, new game starting in 5...') },1000)
            setTimeout(function() { new Message('Game over, new game starting in 4...') },2000)
            setTimeout(function() { new Message('Game over, new game starting in 3...') },3000)
            setTimeout(function() { new Message('Game over, new game starting in 2...') },4000)
            finalGameOverTimeout = setTimeout(function() { new Message('Game over, new game starting in 1...') },5000)
            console.log('gameover');
        });

        socket.on('new_game', function(data) {
            clearTimeout(finalGameOverTimeout)
            new Message('GO GO GO!')
            console.log('new_game', data)
        });

    })


</script>

<div class="container" id='game-container'>
    <h1 class="page-header" style='margin-top:10px'>challenger.io <small>pew pew pew <iframe style="margin:-5px 0" id='knockout-vote' src="http://nodeknockout.com/iframe/challenger-io" frameborder=0 scrolling=no allowtransparency=true width=115 height=25></iframe></small></h1>

    <div id="info">

        <div id="meters">
        </div>

        <h2 id="me"></h2>

        <div id="meta">
            <h4 id="kills">Kills: <span>0</span></h4>
            <h4 id="deaths">Deaths: <span>0</span></h4>
        </div>
        <div style="clear: both"></div>
    </div>

    <div id="game">
        <div class="page-header" style="margin:1px -12px 6px 1px !important"></div>
        <div class="well" style="width: 1025px; padding: 5px;">
            <canvas id='canvas-main'></canvas>
            <canvas id='canvas-lighting'></canvas>
        </div>
        <div id="messages"></div>
    </div>

    <div id="total_score">
        <h2>Total <span>0</span></h2>
    </div>

    <div id="sidebar">
        <div id="leaderboard">
            <h5>Leaderboard</h5>
            <table class="table table-condensed table-striped">
                <thead>
                    <th>Rank</th>
                    <th>Player</th>
                    <th>Kills</th>
                    <th>Deaths</th>
                </thead>
                <tbody></tbody>
            </table>
        </div>

        <div id="chat">
            <div class="well">
                <ul class="unstyled" ></ul>
                <input id='chat-input' placeholder='Press Enter to Chat'>
            </div>
        </div>
    </div>
</div>




<div class="container" id='enter-container'>
    <div class="row">
        <div class="span8 offset4">

            <h1 class="page-header">challenger.io <small>pew pew pew <iframe style="margin:-5px 0" id='knockout-vote' src="http://nodeknockout.com/iframe/challenger-io" frameborder=0 scrolling=no allowtransparency=true width=115 height=25></iframe></small></h1>
        </div>
    </div>

    <div class="row">
        <div class="span8 offset4">
            <div class="well">
                <div id='enter'>
                    <div class='enter-form'>
                        <h4>Enter a name for yourself</h4>
                        <input id='name'><br>
                        <a href='#' id='join-button' class='btn btn-primary'>Join Game</a>
                        <br><br><br>
                        <h4>How to play</h4>
                        <ul class='unstyled'>
                            <li>Move = WASD or Arrow keys</li>
                            <li>Aim = Mouse</li>
                            <li>Shoot = Left-Click</li>
                            <li>Reload = Right-Click or R</li>
                            <li>Chat = Enter</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
